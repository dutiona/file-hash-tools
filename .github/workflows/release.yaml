name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_prefix: 'linux'
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_prefix: 'macos'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_prefix: 'windows'

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Build binaries (Release)
      run: |
        cargo build --release --all-features --all-targets --target ${{ matrix.target }}

    - name: Package binaries
      run: |
        mkdir -p package/bin
        cp target/${{ matrix.target }}/release/bin1 package/bin/
        cp target/${{ matrix.target }}/release/bin2 package/bin/
        cp target/${{ matrix.target }}/release/bin3 package/bin/
        cp README.md package/
        cp LICENSE package/
        cd package
        tar -czvf ../${{ matrix.archive_prefix }}-release.tar.gz .

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.archive_prefix }}-release
        path: ${{ matrix.archive_prefix }}-release.tar.gz

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        files: |
          artifacts/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
