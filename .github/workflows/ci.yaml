name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test-unix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [nightly, beta, stable, 1.74.0, 1.73.0, 1.72.1, 1.71.1]
        include:
          - os: ubuntu-latest
            distro: ubuntu
          - os: macos-latest
            distro: macos

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Install Cargo modules
      run: cargo install cargo-audit cargo-llvm-cov

    - name: Build (Debug)
      run: cargo build --all-targets --all-features --verbose

    - name: Format (Debug)
      run: cargo fmt --check --verbose

    - name: Test (Debug)
      run: cargo test --verbose

    - name: Check (Debug)
      run: cargo check --verbose

    - name: Clippy (Debug)
      run: cargo clippy --verbose

    - name: Audit (Debug)
      run: cargo audit

    - name: Check (Debug)
      run: cargo llvm-cov --html --verbose

    - name: Doc
      run: cargo doc

    - name: Build (Release)
      run: cargo build --release

    - name: Test (Release)
      run: cargo test --release

    - name: Benchmarks (Release)
      run: cargo bench --all-features

    - name: Package Artifacts
      run: |
        mkdir -p artifacts/benches artifacts/doc artifacts/coverage
        cp -r target/criterion/* artifacts/benches/
        cp -r target/doc/* artifacts/doc/
        cp -r target/llvm-cov/* artifacts/coverage/
        tar -czvf ${{ matrix.os }}-${{ matrix.rust }}-artifacts.tar.gz ./artifacts

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.rust }}-artifacts
        path: ${{ matrix.os }}-${{ matrix.rust }}-artifacts.tar.gz

  build-and-test-windows:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        rust: [nightly, beta, stable, 1.74.0, 1.73.0, 1.72.1, 1.71.1]
        include:
          - os: windows-latest
            distro: windows

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Install Cargo modules
      run: cargo install cargo-audit cargo-llvm-cov

    - run: echo "version=$(rustc --version)" >> $GITHUB_OUTPUT
      id: rust-version
    - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
    - run: vcpkg install openssl:x64-windows-static-md

    - name: Build (Debug)
      run: cargo build --all-targets --all-features --verbose

    - name: Format (Debug)
      run: cargo fmt --check --verbose

    - name: Test (Debug)
      run: cargo test --verbose

    - name: Check (Debug)
      run: cargo check --verbose

    - name: Clippy (Debug)
      run: cargo clippy --verbose

    - name: Audit (Debug)
      run: cargo audit

    - name: Check (Debug)
      run: cargo llvm-cov --html --all-features --workspace --verbose

    - name: Doc
      run: cargo doc

    - name: Build (Release)
      run: cargo build --release

    - name: Test (Release)
      run: cargo test --release

    - name: Benchmarks (Release)
      run: cargo bench --all-features

    - name: Package Artifacts
      run: |
        New-Item -ItemType Directory -Force -Path artifacts/benches
        Copy-Item -Recurse -Force target/criterion/* artifacts/benches/
        New-Item -ItemType Directory -Force -Path artifacts/doc
        Copy-Item -Recurse -Force target/doc/* artifacts/doc/
        New-Item -ItemType Directory -Force -Path artifacts/coverage
        Copy-Item -Recurse -Force target/llvm-cov/* artifacts/coverage/
        $tarballName = "${{ matrix.os }}-${{ matrix.rust }}-artifacts.tar.gz"
        Compress-Archive -Path artifacts/* -DestinationPath $tarballName -Force

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.rust }}-artifacts
        path: ${{ matrix.os }}-${{ matrix.rust }}-artifacts.tar.gz
